#!/bin/bash
# installs yalalr externals, to go with git yalalr repo.   -cem bozsahin
#  also sets PATH and lisp execs so that yalalr is available from anywhere
yalalrdir=`pwd`
echo 'yalalr external resources install and path set up'
echo '================================================='
# check to see if lalr has been installed before
if [ ! "$LALR_HOME" ]; then
  read -r -p "lalrparser.lisp package is external required.\nWhere do you want to install it? " lalr
  if [ -d "$lalr" ] && [ -w "$lalr" ]; then
    cd $lalr
    wget -v --no-check-certificate --backups=3 http://web.science.mq.edu.au/~mjohnson/code/lalrparser.lisp
    lalr=`pwd`
  else
    echo "! $lalr: No such writable directory. Re-run this script to finish the partial install."
    exit -1
  fi
else
  echo "lalrparser.lisp found at $LALR_HOME. Using it"
  lalr=$LALR_HOME
fi
# check to see if a Lisp has been installed before
if [ -x /usr/local/bin/sbcl ] || [ -x /usr/bin/sbcl ] || [ -x /usr/local/bin/ccl ] || [ -x /usr/bin/ccl ]; then
  echo 'An installed ANSI Common Lisp is found'
  echo '? If you do NOT want to use an existing Lisp, hit RETURN'
  read -r -p '? What is the full path of your preferred Lisp executable? ' locallisp
fi
if [ -x "$locallisp" ]; then 
  echo 'got it.'
else
  echo 'no local SBCL, CCL or other Lisp set.'
  echo '! Set the YALALR_LISP variable in .bashrc to your binary later if I cannot install SBCL below'
  unset locallisp
fi
#check if lisp needs installing
if [ ! "$locallisp" ]; then
  if [ -x /usr/local/bin/brew ] || [ -x /sw/bin/brew ] || [ -x /sw/local/bin/brew ]; then
    	packager=brew
  fi
  if [ -x /usr/bin/apt-get ] || [ -x /usr/local/bin/apt-get ]; then
	packager=apt-get   # overrides brew if you have them both
  fi
  if [ "$packager" ]; then
	echo 'you have an installer for standard packages'
	echo 'I can install SBCL and rlwrap from standard repositories'
	read -r -p '? Do you want to install SBCL [y/n]? ' auxinstall
	if [ $auxinstall ] && [ $auxinstall = y ] || [ $auxinstall = Y ]; then
		echo '! WARNING: you need sudo access now'
		sudo $packager install sbcl
		locallisp=`which sbcl`
	fi
	if [ -x /usr/local/bin/rlwrap ] || [ -x /usr/bin/rlwrap ] || [ -x /sw/bin/rlwrap ] || [ -x /sw/local/bin/rlwrap ]; then
		echo 'Using local rlwrap'
	else 
		echo '! rlwrap not found. It is very annoying NOT to have it when you run yalalr'
		echo '! WARNING: you need sudo access now'
		sudo $packager install rlwrap
        fi
  else
	echo '! apt-get or brew not found. I leave Common Lisp and rlwrap handling to you.'
  fi
else
  echo "Using the Lisp at $locallisp for yalalr"
fi
# check to see if there is already a yalalr
if [ "$YALALR_HOME" ]; then
  echo 'You have a yalalr system installed.'
  read -r -p "? Do you want me to stay at YALALR_HOME = $YALALR_HOME [y/n] ? " reinstall
  if [ $reinstall ] && [ $reinstall = y ] || [ $reinstall = Y ]; then
    echo 'Using existing system. Best to do a "git pull" there to refresh.'
  else
    read -r -p '? What is the new location for yalalr home ? ' newloc
    if [ -d "$newloc" ] && [ -w "$newloc" ]; then
      yalalrdir=$newloc
    else
      echo "! $newloc: Not a writable directory. Re-run this script to finish the partial install"
      exit -1
    fi
  fi
fi
printf '%s\n' '# stuff added by yalalr installer' >> ~/.bashrc
if [ -x /usr/local/bin/rlwrap ] || [ -x /usr/bin/rlwrap ] || [ -x /sw/bin/rlwrap ] || [ -x /sw/local/bin/rlwrap ]; then
  if [ ! "$RLWRAP" ]; then
    printf '%s\n' 'export RLWRAP=rlwrap' >> ~/.bashrc
  fi
else
  printf '%s\n' 'export RLWRAP=' >> ~/.bashrc
  echo '! If rlwrap is installed later, change the RLWRAP variable in ~/.bashrc'
fi
printf '%s\n%s\n%s\n%s\n' "export YALALR_HOME=$yalalrdir" "export YALALR_LISP=$locallisp" "export LALR_HOME=$lalr" "export PATH=:.:\$YALALR_HOME/bin:\$PATH" >> ~/.bashrc
printf '%s\n' '# end of stuff added by yalalr installer' >> ~/.bashrc
printf '%s\n' '# stuff added by yalalr installer' >> ~/.bash_profile
printf '%s\n' 'if [ -f ~/.bashrc ]; then source ~/.bashrc; fi' >> ~/.bash_profile
if [ "$reinstall" ]; then
  echo '! You have re-installed yalalr. Make sure its home is a git repo'
fi
echo '! Just do "git pull" in yalalr home for updates from now on.'
echo 'install: completed.'
echo 'To run, first open a fresh terminal, or logout and login. Then do'
echo 'yalalr'
echo '================================================='
