$ ex-expr.lexer ex-expr.data > tokens

> (load "ex-expr.lisp")

T
> (make-lalrparser)
; in: DEFUN LALR-PARSER
;     #'(LAMBDA (ID COLON EQLS E END) (APPEND (LIST 'LVAL (VAL ID) '/) E '(MOVE)))
; 
; caught STYLE-WARNING:
;   The variable COLON is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable EQLS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable END is defined but never used.

;     #'(LAMBDA (LP E RP) (IDENTITY E))
; 
; caught STYLE-WARNING:
;   The variable LP is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable RP is defined but never used.

;     #'(LAMBDA (SUB ID) (APPEND (LIST 'RVAL) (LIST (VAL ID) '/) '(NEG /)))
; 
; caught STYLE-WARNING:
;   The variable SUB is defined but never used.

;     #'(LAMBDA (TE MULT F) (APPEND TE F '(MULT /)))
; 
; caught STYLE-WARNING:
;   The variable MULT is defined but never used.

;     #'(LAMBDA (E ADD TE) (APPEND E TE '(ADD /)))
; 
; caught STYLE-WARNING:
;   The variable ADD is defined but never used.

;     #'(LAMBDA (TE DIV F) (APPEND TE F '(DIV /)))
; 
; caught STYLE-WARNING:
;   The variable DIV is defined but never used.

;     #'(LAMBDA (E SUB TE) (APPEND E TE '(SUB /)))
; 
; caught STYLE-WARNING:
;   The variable SUB is defined but never used.
; 
; compilation unit finished
;   caught 10 STYLE-WARNING conditions
STYLE-WARNING: redefining COMMON-LISP-USER::LALR-PARSER in DEFUN

LALR-PARSER
NIL
NIL
> (target-code)

(LVAL A / RVAL B / RVAL C / RVAL D / MULT / ADD / RVAL E / NEG / RVAL F / ADD /
 RVAL 5 / DIV / SUB / MOVE)
> (dribble)
